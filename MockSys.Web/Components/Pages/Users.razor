@page "/users"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject FakeDataApiClient FakeApi

<PageTitle>Fake Users</PageTitle>

<h1>Fake Users</h1>

<p>The full list of fake users used by the example external service.</p>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>User ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<User>? users = null;

    protected override async Task OnInitializedAsync()
    {
        users = await FakeApi.GetFakeUsersAsync();
    }
}
